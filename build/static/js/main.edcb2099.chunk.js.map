{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["name","decodeURIComponent","window","location","href","split","contentBox","width","height","borderRadius","boxShadow","backgroundColor","margin","position","display","flexDirection","alignItems","marginTop","topTitle","lineHeight","marginLeft","nowTime","textAlign","fontSize","fontWeight","color","nowTimeBig","App","React","useState","time","setTime","useEffect","timer","setInterval","month","Date","getMonth","toLocaleString","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","clearInterval","yearDay","getFullYear","toString","className","style","fontFamily","right","top","cursor","src","alt","onClick","reload","paddingTop","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edcb2099.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport './App.css';\nimport  img from './code.png' \n\nconst name = decodeURIComponent(window.location.href.split('?')[1].split('=')[1]);\nfunction App() {\n    const [time,setTime] = React.useState<string[]>([]);\n    React.useEffect(()=>{\n        const timer = setInterval(()=>{ \n            let month:string = (new Date().getMonth()+1).toLocaleString().padStart(2,'0');\n            let day:string = new Date().getDate().toLocaleString().padStart(2,'0');\n            let hour:string = new Date().getHours().toLocaleString().padStart(2,'0');\n            let minute:string = new Date().getMinutes().toLocaleString().padStart(2,'0');\n            let second:string = new Date().getSeconds().toLocaleString().padStart(2,'0');\n            let date = month + '月' + day + '日' \n            let datetime = hour+\":\"+minute+\":\"+second;\n            setTime([date,datetime]);\n        },1000)\n        return ()=>{\n            clearInterval(timer);\n        }\n    },[]);\n    const yearDay = new Date().getFullYear().toString() +\"-\"+  (new Date().getMonth()+1).toLocaleString().padStart(2,'0') + \"-\" + new Date().getDate().toLocaleString().padStart(2,'0');\n    return (\n        <div className=\"App\">\n        <div style={contentBox}>\n            <div style={nowTime}>\n                {time[0]}\n            </div>\n            <div style={nowTimeBig}>\n                {time[1]}\n            </div>\n            <div  style={topTitle}>\n                    <p style={{fontSize:'1.0rem',margin:'0',fontFamily:'Microsoft YaHei',fontWeight:'450'}}>{'姓名：' + name}</p>\n                    <p style={{fontSize:'13px',margin:'0'}}>单位：信息管理与人工智能学院</p>\n            </div>\n            <div style={{position:'absolute',right:'0',top:'7.7rem',cursor:'pointer'}}>\n                    <img src=\"https://e.zufe.edu.cn/zcxs/resources/jkm/images/an1.png\" alt=\"\" onClick={()=>{window.location.reload();}}/>\n            </div>\n            <div className=\"code\"></div>\n             <div style={{color:'#c4a861',fontWeight:'500',fontSize:'1.2rem'}}>新冠疫苗接种情况 \n                 <span style={{color:'#1e91f6'}}>  已接种</span>\n             </div>\n             <div style={{color:'#c4a861',fontWeight:'500',fontSize:'0.9rem',marginTop:'0.8rem'}}>第一针 2021-04-21 第二针 2021-06-03</div>\n             <div style={{color: 'grey',fontWeight:'500',fontSize:'0.9rem'}}>更新时间：{yearDay+ \" \" +time[1]}</div>\n             <div style={{color: 'grey',fontWeight:'500',fontSize:'0.9rem'}}>有效期：{yearDay} 0:00-24:00</div>\n             <div style={{textAlign:'center',paddingTop:'20px'}}>\n                <a href=\"https://e.zufe.edu.cn/infoplus/form/XSCWJCSQ/start?back=1&x_posted=true\" target=\"_blank\">通行码申请</a>\n                <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                <a href=\"https://e.zufe.edu.cn/infoplus/form/XSCWJCSQ/start?back=1&x_posted=true\" target=\"_blank\">学生返校申请</a>\n            </div>\n            <div >\n                <a href=\"https://e.zufe.edu.cn/infoplus/form/XSCWJCSQ/start?back=1&x_posted=true\" target=\"_blank\">通信大数据行程卡</a>\n            </div>\n            \n        </div>\n        </div>\n    );\n}\n\nconst contentBox:React.CSSProperties ={\n    width:'90%',\n    height:'600px',\n    borderRadius:'10px',\n    boxShadow:'0 0 8px rgba(0, 0, 0, 0.4)',\n    backgroundColor:'white',\n    margin:'0 auto',\n    position:'relative',\n    display:'flex',\n    flexDirection:'column',\n    alignItems:'center',\n    marginTop:'3rem',\n\n}\nconst topTitle:React.CSSProperties ={\n    width:'79%',\n    margin:'0 auto',\n    lineHeight:'30px',\n    marginLeft:'10px',\n    marginTop:'1rem'\n}\nconst nowTime:React.CSSProperties ={\n   width:'90%',\n   margin:'0 auto',\n   textAlign:'center',\n   lineHeight:'24px',\n   fontSize:'2.5rem',\n   fontWeight:'bold',\n   marginTop:'1.6rem',\n   color: '#424242'\n}\nconst nowTimeBig:React.CSSProperties ={\n    width:'90%',\n    margin:'0 auto',\n    textAlign:'center',\n    fontSize:'3rem',\n    fontWeight:'bold',\n    marginTop:'0.2rem',\n    color: '#424242'\n }\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}